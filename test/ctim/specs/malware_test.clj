(ns ctim.specs.malware-test
  (:require [clojure.spec :as s]
            [clojure.test :refer [deftest is testing use-fixtures]]
            [ctim.schemas.malware :as sut]
            [ctim.test-helpers.core :refer [fixture-spec-validation]]
            [ctim.examples.malwares :as e]
            [flanders.spec :as fs]))

(use-fixtures :once fixture-spec-validation)

(def kwns "malware")

(deftest malware-spec-test
  (testing "example with all possible fields"
    (is (s/assert
         (fs/->spec sut/Malware kwns)
         e/malware-maximal)))

  (testing "example with only required fields"
    (is (s/assert
         (fs/->spec sut/Malware kwns)
         e/malware-minimal))))

(deftest new-malware-spec-test
  (testing "example with all possible fields"
    (is (s/assert
         (fs/->spec sut/NewMalware kwns)
         e/new-malware-maximal)))

  (testing "example with only required fields"
    (is (s/assert
         (fs/->spec sut/NewMalware kwns)
         e/new-malware-minimal))))

(deftest stored-malware-spec-test
  (testing "example with all possible fields"
    (is (s/assert
         (fs/->spec sut/StoredMalware kwns)
         e/stored-malware-maximal)))

  (testing "example with only required fields"
    (is (s/assert
         (fs/->spec sut/StoredMalware kwns)
         e/stored-malware-minimal))))


